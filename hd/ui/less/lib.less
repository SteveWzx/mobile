// =============================================
// @author: wzx
// @time: 2015-11-13
// @version: 0.1 beta
// =============================================

// common reset
.reset(){
  /*! normalize.css v3.0.2 | MIT License | git.io/normalize */

  /**
   * 1. Set default font family to sans-serif.
   * 2. Prevent iOS text size adjust after orientation change, without disabling
   *    user zoom.
   */

  html {
    font-family: sans-serif; /* 1 */
    -ms-text-size-adjust: 100%; /* 2 */
    -webkit-text-size-adjust: 100%; /* 2 */
  }

  /**
   * Remove default margin.
   */

  body {
    margin: 0;
  }

  /* HTML5 display definitions
     ========================================================================== */

  /**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */

  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  main,
  menu,
  nav,
  section,
  summary {
    display: block;
  }

  /**
   * 1. Correct `inline-block` display not defined in IE 8/9.
   * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
   */

  audio,
  canvas,
  progress,
  video {
    display: inline-block; /* 1 */
    vertical-align: baseline; /* 2 */
  }

  /**
   * Prevent modern browsers from displaying `audio` without controls.
   * Remove excess height in iOS 5 devices.
   */

  audio:not([controls]) {
    display: none;
    height: 0;
  }

  /**
   * Address `[hidden]` styling not present in IE 8/9/10.
   * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
   */

  [hidden],
  template {
    display: none;
  }

  /* Links
     ========================================================================== */

  /**
   * Remove the gray background color from active links in IE 10.
   */

  a {
    background-color: transparent;
  }

  /**
   * Improve readability when focused and also mouse hovered in all browsers.
   */

  a:active,
  a:hover {
    outline: 0;
  }

  /* Text-level semantics
     ========================================================================== */

  /**
   * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
   */

  abbr[title] {
    border-bottom: 1px dotted;
  }

  /**
   * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
   */

  b,
  strong {
    font-weight: bold;
  }

  /**
   * Address styling not present in Safari and Chrome.
   */

  dfn {
    font-style: italic;
  }

  /**
   * Address variable `h1` font-size and margin within `section` and `article`
   * contexts in Firefox 4+, Safari, and Chrome.
   */

  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }

  /**
   * Address styling not present in IE 8/9.
   */

  mark {
    background: #ff0;
    color: #000;
  }

  /**
   * Address inconsistent and variable font size in all browsers.
   */

  small {
    font-size: 80%;
  }

  /**
   * Prevent `sub` and `sup` affecting `line-height` in all browsers.
   */

  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sup {
    top: -0.5em;
  }

  sub {
    bottom: -0.25em;
  }

  /* Embedded content
     ========================================================================== */

  /**
   * Remove border when inside `a` element in IE 8/9/10.
   */

  img {
    border: 0;
  }

  /**
   * Correct overflow not hidden in IE 9/10/11.
   */

  svg:not(:root) {
    overflow: hidden;
  }

  /* Grouping content
     ========================================================================== */

  /**
   * Address margin not present in IE 8/9 and Safari.
   */

  figure {
    margin: 1em 40px;
  }

  /**
   * Address differences between Firefox and other browsers.
   */

  hr {
    -moz-box-sizing: content-box;
    box-sizing: content-box;
    height: 0;
  }

  /**
   * Contain overflow in all browsers.
   */

  pre {
    overflow: auto;
  }

  /**
   * Address odd `em`-unit font size rendering in all browsers.
   */

  code,
  kbd,
  pre,
  samp {
    font-family: monospace, monospace;
    font-size: 1em;
  }

  /* Forms
     ========================================================================== */

  /**
   * Known limitation: by default, Chrome and Safari on OS X allow very limited
   * styling of `select`, unless a `border` property is set.
   */

  /**
   * 1. Correct color not being inherited.
   *    Known issue: affects color of disabled elements.
   * 2. Correct font properties not being inherited.
   * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
   */

  button,
  input,
  optgroup,
  select,
  textarea {
    color: inherit; /* 1 */
    font: inherit; /* 2 */
    margin: 0; /* 3 */
  }

  /**
   * Address `overflow` set to `hidden` in IE 8/9/10/11.
   */

  button {
    overflow: visible;
  }

  /**
   * Address inconsistent `text-transform` inheritance for `button` and `select`.
   * All other form control elements do not inherit `text-transform` values.
   * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
   * Correct `select` style inheritance in Firefox.
   */

  button,
  select {
    text-transform: none;
  }

  /**
   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
   *    and `video` controls.
   * 2. Correct inability to style clickable `input` types in iOS.
   * 3. Improve usability and consistency of cursor style between image-type
   *    `input` and others.
   */

  button,
  html input[type="button"], /* 1 */
  input[type="reset"],
  input[type="submit"] {
    -webkit-appearance: button; /* 2 */
    cursor: pointer; /* 3 */
  }

  /**
   * Re-set default cursor for disabled elements.
   */

  button[disabled],
  html input[disabled] {
    cursor: default;
  }

  /**
   * Remove inner padding and border in Firefox 4+.
   */

  button::-moz-focus-inner,
  input::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  /**
   * Address Firefox 4+ setting `line-height` on `input` using `!important` in
   * the UA stylesheet.
   */

  input {
    line-height: normal;
  }

  /**
   * It's recommended that you don't attempt to style these elements.
   * Firefox's implementation doesn't respect box-sizing, padding, or width.
   *
   * 1. Address box sizing set to `content-box` in IE 8/9/10.
   * 2. Remove excess padding in IE 8/9/10.
   */

  input[type="checkbox"],
  input[type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
  }

  /**
   * Fix the cursor style for Chrome's increment/decrement buttons. For certain
   * `font-size` values of the `input`, it causes the cursor style of the
   * decrement button to change from `default` to `text`.
   */

  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  /**
   * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
   * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
   *    (include `-moz` to future-proof).
   */

  input[type="search"] {
    -webkit-appearance: textfield; /* 1 */
    -moz-box-sizing: content-box;
    -webkit-box-sizing: content-box; /* 2 */
    box-sizing: content-box;
  }

  /**
   * Remove inner padding and search cancel button in Safari and Chrome on OS X.
   * Safari (but not Chrome) clips the cancel button when the search input has
   * padding (and `textfield` appearance).
   */

  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  /**
   * Define consistent border, margin, and padding.
   */

  fieldset {
    border: 1px solid #c0c0c0;
    margin: 0 2px;
    padding: 0.35em 0.625em 0.75em;
  }

  /**
   * 1. Correct `color` not being inherited in IE 8/9/10/11.
   * 2. Remove padding so people aren't caught out if they zero out fieldsets.
   */

  legend {
    border: 0; /* 1 */
    padding: 0; /* 2 */
  }

  /**
   * Remove default vertical scrollbar in IE 8/9/10/11.
   */

  textarea {
    overflow: auto;
  }

  /**
   * Don't inherit the `font-weight` (applied by a rule above).
   * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
   */

  optgroup {
    font-weight: bold;
  }

  /* Tables
     ========================================================================== */

  /**
   * Remove most spacing between table cells.
   */

  table {
    border-collapse: collapse;
    border-spacing: 0;
  }

  td,
  th {
    padding: 0;
  }
}
// layout
.fl(@f:left;){
    float: @f;
    display: inline;
}
.fr(@f:right){
  float: @f;
  display: inline;
}
.rel(@rel:relative){
  position: @rel;
}
.abs(@abs:absolute){
  position: @abs;
}
.fix(@fix:fixed){
  position: @fix;
}
.bc(){
  margin-left: auto;
  margin-right: auto;
}
.z-index(@index:1){
  z-index: @index;
}
.clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}
.db(){
  display: block;
}
.di(){
  display: inline;
}
.dib(){
  display: inline-block;
}
.dt(){
  display:table;
}
.dn(){
  display: none;
}
.cl() {
  clear:both
}
.z() {
  *zoom:1
}
.o() {
  overflow:hidden;zoom:1
}
//display
.m(@p: 10px){
  margin: @p;
}
.mt(@p: 10px){
  margin-top: @p;
}
.mr(@p: 10px){
  margin-right: @p;
}
.mb(@p: 10px){
  margin-bottom: @p;
}
.ml(@p: 10px){
  margin-left: @p;
}
.p(@p: 10px){
  padding: @p;
}
.pt(@p: 10px){
  padding-top: @p;
}
.pr(@p: 10px){
  padding-right: @p;
}
.pb(@p: 10px){
  padding-bottom: @p;
}
.pl(@p: 10px){
  padding-left: @p;
}
//text
.fa() {
  font-family:Arial
}
.ft() {
  font-family:Tahoma
}
.fv() {
  font-family:Verdana
}
.fsong() {
  font-family:'simsun'
}
.fw() {
  font-family:'microsoft yahei'
}
.fs(@p: 12px){
  font-size: @p;
}
.lh(@h) {
  height: @h;
  line-height: @h;
}
.b(){
  font-weight: bold;
}
.n(){
  font-weight: normal;
  font-style: normal;
}
.i(){
  font-style: italic;
}
.tu(){
  text-decoration: underline;
}
.tn(){
  text-decoration: none;
}
.tl(){
  text-align: left;
}
.tc(){
  text-align: center;
}
.tr(){
  text-align: right;
}
.vm(){
  vertical-align:middle
}
.vb(){
  vertical-align:bottom
}
.vt(){
  vertical-align:top
}
.opa(@opacity: 80) {
  opacity: @opacity / 100;
  filter: ~"alpha(opacity=@{opacity})";
}
//文字省略号 @substract单位为%
.ellipsis(@substract:0) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width:100% - @substract;
  .db;
}
//color
.blue() {
  color:#099cd6;
}
.hover() {
  color:#099cd6;
  text-decoration:none;
}
.c3() {
  color: #333;
}
.c6() {
  color: #666;
}
.c9() {
  color: #999;
}
.cf() {
  color: #fff;
}
.bgf() {
  background:#fff;
}
.poi() {
  cursor: pointer;
}
//btn

// CSS三角形符号
.triangle(top, @w:5px, @c:#0cf) {
  border-width: @w;
  border-color: transparent transparent @c transparent;
  border-style: dashed dashed solid dashed;
}
.triangle(right, @w:5px, @c:#0cf) {
  border-width: @w;
  border-color: transparent transparent transparent @c;
  border-style: dashed dashed dashed solid;
}
.triangle(bottom, @w:5px, @c:#0cf) {
  border-width: @w;
  border-color:  @c transparent transparent  transparent;
  border-style: solid dashed dashed dashed;
}
.triangle(left, @w:5px, @c:#0cf) {
  border-width: @w;
  border-color: transparent  @c transparent transparent;
  border-style: dashed solid dashed dashed;
}
.triangle(@_, @w:5px, @c:#0cf) {
  overflow: hidden;
  width: 0;
  height: 0;
}
// CSS3 style
.borderRadius(@radius:5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  -ms-border-radius: @radius;
  -o-border-radius: @radius;
  border-radius: @radius;
}
.boxShadow(@x:1px, @y:1px, @blur:1px, @color:#000) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  -ms-box-shadow: @arguments;
  -o-box-shadow: @arguments;
  box-shadow: @arguments;
}
.textShadow(@x:1px, @y:1px, @blur:1px, @color:#000) {
  -webkit-text-shadow: @arguments;
  -moz-text-shadow: @arguments;
  -ms-text-shadow: @arguments;
  -o-text-shadow: @arguments;
  text-shadow: @arguments;
}
// Transitions
// 简写属性
.transition(@property:all, @duration:0.3s, @function:ease, @delay:0) {
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -ms-trnasition: @arguments;
  -o-transition: @arguments;
}
// 拆分属性
// .transition(@args:200ms) { -webkit-transition: @args; -moz-transition: @args; -o-transition: @args; -ms-transition: @args; transition: @args; }
// .transition-delay(@delay:0) { -webkit-transition-delay: @delay; -moz-transition-delay: @delay; -o-transition-delay: @delay; -ms-transition-delay: @delay; transition-delay: @delay; }
// .transition-duration(@duration:200ms) { -webkit-transition-duration: @duration; -moz-transition-duration: @duration; -o-transition-duration: @duration; -ms-transition-duration: @duration; transition-duration: @duration; }
// .transition-property(@property:all) { -webkit-transition-property: @property; -moz-transition-property: @property; -o-transition-property: @property; -ms-transition-property: @property; transition-property: @property; }
// .transition-timing-function(@function:ease) { -webkit-transition-timing-function: @function; -moz-transition-timing-function: @function; -o-transition-timing-function: @function; -ms-transition-timing-function: @function; transition-timing-function: @function; }

// Transforms
.transform(@args) { -webkit-transform: @args; -moz-transform: @args; -ms-transform: @args; -o-transform: @args; transform: @args; }
.transform-origin(@args) { -webkit-transform-origin: @args; -moz-transform-origin: @args; -ms-transform-origin: @args; -o-transform-origin: @args; transform-origin: @args; }
.transform-style(@style) { -webkit-transform-style: @style; -moz-transform-style: @style; -ms-transform-style: @style; -o-transform-style: @style; transform-style: @style; }

.rotate(@deg:0deg) {
  .transform(rotate(@deg));
}

.scale(@factor:0) {
  .transform(scale(@factor));
}

.translate(@x,@y) {
  .transform(translate(@x,@y));
}
.skew(@x-angle,@y-angle) {
  .transform(skew(@x-angle,@y-angle))
}
.rotate3d(@x,@y,@z,@angle) {
  .transform(rotate3d(@x,@y,@z,@angle));
}
.scale3d(@x,@y,@z) {
  .transform(scale3d(@x,@y,@z));
}
.translate3d(@x,@y,@z) {
  .transform(translate3d(@x,@y,@z));
}
.translateHardware(@x,@y) {
  .translate(@x,@y);
  -webkit-transform: translate3d(@x,@y,0);
  -moz-transform: translate3d(@x,@y,0);
  -o-transform: translate3d(@x,@y,0);
  -ms-transform: translate3d(@x,@y,0);
  transform: translate3d(@x,@y,0);
}

// Animation
// 简写属性
.animation(@name, @duration:0.3s, @function:ease, @delay:0, @count:1, @direction:normal) {
  -webkit-animation: @arguments;
  -moz-animation: @arguments;
  -ms-animation: @arguments;
  -o-animation: @arguments;
  animation: @arguments;
}
// 拆分属性
// .animation(@args) { -webkit-animation: @args; -moz-animation: @args; -ms-animation: @args; -o-animation: @args; animation: @args; }
// .animation-name(@name) { -webkit-animation-name: @name; -moz-animation-name: @name; -ms-animation-name: @name; -o-animation-name: @name; animation-name: @name; }
// .animation-duration(@duration) { -webkit-animation-duration: @duration; -moz-animation-duration: @duration; -ms-animation-duration: @duration; -o-animation-duration: @duration; }
// .animation-timing-function(@function) { -webkit-animation-timing-function: @function; -moz-animation-timing-function: @function; -ms-animation-timing-function: @function; -o-animation-timing-function: @function; animation-timing-function: @function; }
// .animation-delay(@delay) { -webkit-animation-delay: @delay; -moz-animation-delay: @delay; -ms-animation-delay: @delay; -o-animation-delay: @delay; animation-delay: @delay; }
// .animation-iteration-count(@count) { -webkit-animation-iteration-count: @count; -moz-animation-iteration-count: @count; -ms-animation-iteration-count: @count; -o-animation-iteration-count: @count; animation-iteration-count: @count; }
// .animation-direction(@direction) { -webkit-animation-direction: @direction; -moz-animation-direction: @direction; -ms-animation-direction: @direction; -o-animation-direction: @direction; }
// .animation-play-state(@state) { -webkit-animation-play-state: @state; -moz-animation-play-state: @state; -ms-animation-play-state: @state; -o-animation-play-state: @state; animation-play-state: @state; }
// .animation-fill-mode(@mode) { -webkit-animation-fill-mode: @mode; -moz-animation-fill-mode: @mode; -ms-animation-fill-mode: @mode; -o-animation-fill-mode: @mode; animation-fill-mode: @mode; }







